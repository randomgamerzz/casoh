# global options
{
	admin off # theres no need for the admin api in railway's environment
	persist_config off # storage isn't persistent anyway
	auto_https off # railway handles https for us, this could in some cases cause issues if left enabled
	# runtime logs
	log {
		format json # set runtime log format to json mode 
	}
	# server options
	servers {
		trusted_proxies static private_ranges # trust railway's proxy
	}
}

# site block, listens on the $PORT environment variable, automatically assigned by railway
:{$PORT} {
	# access logs
	log {
		format json # set access log format to json mode
	}

	reverse_proxy {$FRONTEND_HOST} # proxy all requests for /* to the frontend, configure this variable in the service settings

	# the handle_path directive WILL strip /api/ from the path before proxying
	# this is needed if your backend's api routes don't start with /api/
	# change paths as needed
	handle_path /api/* {
		# the /api/ prefix WILL be stripped from the uri sent to the proxy host
		reverse_proxy {$BACKEND_HOST} # proxy all requests for /api/* to the backend, configure this variable in the service settings
	}

	# this handle directive will NOT strip /api/ from the path before proxying
	# if your backend's api routes do start with /api/ then you wouldn't want to strip the path prefix
	# if so, comment out the above handle_path and reverse_proxy directives, and uncomment these handle and reverse_proxy directives
	# change paths as needed
	# handle /api/* {
	# the /api/ prefix will NOT be stripped from the uri sent to the proxy host
	# reverse_proxy {$BACKEND_HOST} # proxy all requests for /api/* to the backend, configure this variable in the service settings
	# }
}
